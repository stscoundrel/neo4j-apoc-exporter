services:
  neo4j:
    image: neo4j:5.26.5
    container_name: neo4j
    healthcheck:
      test: wget http://localhost:7474 || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
      start_interval: 3s
    ports:
      - "7474:7474" # Neo4j Browser
      - "7687:7687" # Bolt protocol
    volumes:
      - neo4j-data:/data
      - ./plugins:/plugins
    environment:
      NEO4J_AUTH: neo4j/password
      NEO4J_PLUGINS: '["apoc-extended"]'
      NEO4J_dbms_security_procedures_unrestricted: "apoc.*"
      NEO4J_dbms_security_procedures_whitelist: "apoc.*"
    networks:
      - testnetwork

  neo4j-exporter:
    build:
      context: ../  
      dockerfile: Dockerfile 
    ports:
      - "17687:17687"
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - EXPORTER_PORT=17687
    restart: on-failure
    depends_on:
      - neo4j
    networks:
      - testnetwork

  prometheus:
    image: prom/prometheus:v3.2.1
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--web.enable-lifecycle"
    ports:
      - "9090:9090"
    networks:
      - testnetwork

  node-exporter:
    image: prom/node-exporter:v1.9.1
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.rootfs=/rootfs"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)"
    ports:
      - "9100:9100"
    networks:
      - testnetwork

volumes:
  neo4j-data:
  prometheus_data:

networks:
  testnetwork:

